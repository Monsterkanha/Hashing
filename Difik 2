Here, assume current as a[i] or a[j] and check two things.

int Solution::diffPossible(const vector<int> &A, int B) {
    unordered_map<int, bool> M;
    for(int i = 0; i< A.size(); i++){
        if(M.find(A[i] - B) != M.end() || M.find(B+A[i]) != M.end()){
            return 1;
        }
        M[A[i]] = true;
        // M[-A[i]] = true;
    }
    return 0;
}
