Here, first obvious solution is record each instance of indices for each number.
Now, if element is already present then we need to increment its first occurance by 1. and remove that index from our current 
number and now 

vector<int> Solution::solve(vector<int> &A) {
    int n = A.size();
    vector<int> res = A;
    unordered_map<int,set<int>> M;

    for(int i = 0; i < n; i++){
        int curr = A[i];
        M[A[i]].insert(i);
        if(M[A[i]].size() == 1) continue;

        auto ind = *M[curr].begin();
        A[ind]++;
        M[curr].erase(ind);
        M[curr + 1].insert(ind);
    }
    return A;
}


