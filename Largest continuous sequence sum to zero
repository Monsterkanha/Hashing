Use prefix sum and a map if current sum is already in the table means this sum has achieved hence calculate the distance.

vector<int> Solution::lszero(vector<int> &A) {
    int ans = 0 , n = A.size();
    unordered_map<int, int> M;

    M.insert({0,-1});
    int sum = 0 , l = 0, r = 0;
    for(int i = 0; i < n; i++){
        sum += A[i];
        if(M.find(sum) != M.end()){
            if(ans < i - M[sum]){
                ans = i - M[sum];
                l = M[sum];
                r = i;
            }
        }
        else{
            M[sum] = i;
        }
    }
    if(ans == 0) return {};
    vector<int> res;
    for(int i = l+1; i <= r; i++){
        res.push_back(A[i]);
    }
    return res;
}
